name: Create Release

on:
    push:
        tags:
            - 'v*'

jobs:
    build-linux:
        runs-on: ubuntu-22.04

        outputs:
          debFileName: ${{ steps.getDebFilename.outputs.debFileName }}
          jarFileName: ${{ steps.getJarFilename.outputs.jarFileName }}

        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10

          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseDeb

          - name: Retrieve Artifact Name
            id: getDebFilename
            run: |
              find "$(pwd)/app/build/compose/binaries/main-release/deb" -type f -name "*.deb" -exec basename {} \;
              echo "debFileName=$filename" >> "$GITHUB_OUTPUT"

          - name: Build UberJar
            run: ./gradlew packageReleaseUberJarForCurrentOS

          - name: Retrieve Jar Artifact Name
            id: getJarFilename
            run: |
              find "$(pwd)/app/build/compose/jars" -type f -name "*.jar" -exec basename {} \;
              echo "jarFileName=$filename" >> "$GITHUB_OUTPUT"

          - name: Upload Linux Artifact
            uses: actions/upload-artifact@v4
            with:
              name: catspy_amd64.deb
              path: app/build/compose/binaries/main-release/deb/${{ steps.getFilename.outputs.debFileName }}
              retention-days: 1

          - name: Upload Jar Artifact
            uses: actions/upload-artifact@v4
            with:
              name: catspy.jar
              path: app/build/compose/jars/${{ steps.getJarFilename.outputs.jarFileName }}
              retention-days: 1

    build-windows:
        runs-on: windows-latest
        outputs:
          msiFileName: ${{ steps.getMsiFilename.outputs.msiFileName }}
        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseMsi
            continue-on-error: true

          - name: Upload logs
            uses: actions/upload-artifact@v4
            with:
              name: logs
              path: app/build/compose/logs/packageMsi/

          - name: Retrieve Artifact Name
            id: getMsiFilename
            run: |
              Get-ChildItem -Path "$(pwd)/app/build/compose/binaries/main-release/msi" -Filter "*.msi" | Select-Object -ExpandProperty BaseName
              echo "msiFileName=$filename" >> "$GITHUB_OUTPUT"

          - name: Upload Windows Artifact
            uses: actions/upload-artifact@v4
            with:
              name: catspy.msi
              path: app/build/compose/binaries/main-release/msi/${{ steps.getMsiFilename.outputs.msiFileName }}
              retention-days: 1

    build-macos:
        runs-on: macos-latest
        outputs:
          dmgFileName: ${{ steps.getDmgFilename.outputs.dmgFileName }}
        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseDmg

          - name: Retrieve Dmg Artifact Name
            id: getDmgFilename
            run: |
              find "$(pwd)/app/build/compose/binaries/main-release/dmg" -type f -name "*.dmg" -exec basename {} \;
              echo "dmgFileName=$filename" >> "$GITHUB_OUTPUT"

          - name: Upload MacOS Artifact
            uses: actions/upload-artifact@v4
            with:
              name: catspy.dmg
              path: app/build/compose/binaries/main-release/dmg/${{ steps.getDmgFilename.outputs.dmgFileName }}
              retention-days: 1

    create-release:
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows, build-macos]
        steps:
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: ${{ github.ref }}
              body: |
                Changes in this Release
              draft: true
              prerelease: true

          - name: Download Linux Artifact
            uses: actions/download-artifact@v4
            with:
              name: catspy_amd64.deb

          - name: Get Artifact Name
            id: getDebFilename
            run: |
              echo "debFilename=`find "$(pwd)/" -type f -name "*.deb" -exec basename {} \;`" >> $GITHUB_OUTPUT

          - name: Upload Linux Release Asset
            id: upload-linux-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ${{ steps.getDebFilename.outputs.debFilename }}
              asset_name: catspy.deb
              asset_content_type: application/x-deb

          - name: Download Windows Artifact
            uses: actions/download-artifact@v4
            with:
              name: catspy.msi

          - name: Get Artifact Name
            id: getMsiFilename
            run: |
              echo "msiFilename=`find "$(pwd)/" -type f -name "*.msi" -exec basename {} \;`" >> $GITHUB_OUTPUT

          - name: Upload Windows Release Asset
            id: upload-windows-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ${{ steps.getMsiFilename.outputs.msiFilename }}
              asset_name: catspy.msi
              asset_content_type: application/x-msi

          - name: Download Jar Artifact
            uses: actions/download-artifact@v4
            with:
              name: catspy.jar

          - name: Get Artifact Name
            id: getJarFilename
            run: |
              echo "jarFilename=`find "$(pwd)/" -type f -name "*.jar" -exec basename {} \;`" >> $GITHUB_OUTPUT

          - name: Upload Jar Release Asset
            id: upload-jar-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ${{ steps.getJarFilename.outputs.jarFilename }}
              asset_name: catspy.jar
              asset_content_type: application/java-archive

          - name: Download MacOS Artifact
            uses: actions/download-artifact@v4
            with:
              name: catspy.dmg

          - name: Get Artifact Name
            id: getDmgFilename
            run: |
              echo "dmgFilename=`find "$(pwd)/" -type f -name "*.dmg" -exec basename {} \;`" >> $GITHUB_OUTPUT

          - name: Upload MacOS Release Asset
            id: upload-macos-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ${{ steps.getDmgFilename.outputs.dmgFilename }}
              asset_name: catspy.dmg
              asset_content_type: 'application/x-apple-diskimage'