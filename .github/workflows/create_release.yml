name: Create Release

on:
    push:
        tags:
            - 'v*'

jobs:
    build-linux:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseDeb

          - name: Retrieve Artifact Name
            id: getFilename
            run: |
              find "$(pwd)/app/build/compose/binaries/main-release/deb" -type f -name "*.deb" -exec basename {} \;
              echo "::set-output name=debFileName::$filename"

    build-windows:
        runs-on: windows-latest
        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseMsi
            continue-on-error: true

          - name: Upload logs
            uses: actions/upload-artifact@v4
            with:
              name: logs
              path: app/build/compose/logs/packageMsi/

          - name: Retrieve Artifact Name
            id: getFilename
            run: |
              Get-ChildItem -Path "$(pwd)/app/build/compose/binaries/main-release/msi" -Filter "*.msi" | Select-Object -ExpandProperty BaseName
              echo "::set-output name=msiFileName::$filename"

    build-macos:
        runs-on: macos-latest
        permissions:
          contents: read
          packages: read
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 10
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17

          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2

          - name: Build
            run: ./gradlew packageReleaseDmg

          - name: Build UberJar
            run: ./gradlew packageReleaseUberJarForCurrentOS

          - name: Retrieve Artifact Name
            id: getJarFilename
            run: |
              find "$(pwd)/app/build/compose/jars" -type f -name "*.jar" -exec basename {} \;
              echo "::set-output name=jarFileName::$filename"

          - name: Retrieve Artifact Name
            id: getDmgFilename
            run: |
              find "$(pwd)/app/build/compose/binaries/main-release/dmg" -type f -name "*.dmg" -exec basename {} \;
              echo "::set-output name=dmgFileName::$filename"

    create-release:
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows, build-macos]
        steps:
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              body: |
                Changes in this Release
              draft: false
              prerelease: false
          - name: Upload Linux Release Asset
            id: upload-linux-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: app/build/compose/binaries/main-release/deb/${{ steps.getFilename.outputs.debFileName }}
              asset_name: catspy_amd64.deb
              asset_content_type: application/x-deb
          - name: Upload Windows Release Asset
            id: upload-windows-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: app/build/compose/binaries/main-release/msi/${{ steps.getFilename.outputs.msiFileName }}
              asset_name: catspy_x64.msi
              asset_content_type: application/x-msi
          - name: Upload Jar Release Asset
            id: upload-jar-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: app/build/compose/jars/${{ steps.getJarFilename.outputs.jarFileName }}
              asset_name: catspy.jar
              asset_content_type: application/java-archive
          - name: Upload MacOS Release Asset
            id: upload-macos-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: app/build/compose/binaries/main-release/dmg/${{ steps.getDmgFilename.outputs.dmgFileName }}
              asset_name: 'catspy.dmg'
              asset_content_type: 'application/x-apple-diskimage'